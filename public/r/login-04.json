{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "login-04",
  "type": "registry:block",
  "title": "Login 04",
  "description": "A simple login block",
  "dependencies": [
    "@hookform/resolvers",
    "react-hook-form",
    "zod"
  ],
  "registryDependencies": [
    "button",
    "form",
    "input",
    "separator"
  ],
  "files": [
    {
      "path": "src/blocks/login-04/page.tsx",
      "content": "\"use client\";\n\nimport { Logo } from \"@/components/logo\";\nimport { Button } from \"@/components/ui/button\";\nimport {\n  Form,\n  FormControl,\n  FormField,\n  FormItem,\n  FormLabel,\n  FormMessage,\n} from \"@/components/ui/form\";\nimport { Input } from \"@/components/ui/input\";\nimport { Separator } from \"@/components/ui/separator\";\nimport { zodResolver } from \"@hookform/resolvers/zod\";\nimport Link from \"next/link\";\nimport { useForm } from \"react-hook-form\";\nimport { z } from \"zod\";\n\nconst formSchema = z.object({\n  email: z.string().email(),\n  password: z.string().min(8, \"Password must be at least 8 characters long\"),\n});\n\nconst Login04Page = () => {\n  const form = useForm<z.infer<typeof formSchema>>({\n    defaultValues: {\n      email: \"\",\n      password: \"\",\n    },\n    resolver: zodResolver(formSchema),\n  });\n\n  const onSubmit = (data: z.infer<typeof formSchema>) => {\n    console.log(data);\n  };\n\n  return (\n    <div className=\"h-screen flex items-center justify-center\">\n      <div className=\"w-full h-full grid lg:grid-cols-2 p-4\">\n        <div className=\"max-w-xs m-auto w-full flex flex-col items-center\">\n          <Logo className=\"h-9 w-9\" />\n          <p className=\"mt-4 text-xl font-bold tracking-tight\">\n            Log in to Shadcn UI Blocks\n          </p>\n\n          <Button className=\"mt-8 w-full gap-3\">\n            <GoogleLogo />\n            Continue with Google\n          </Button>\n\n          <div className=\"my-7 w-full flex items-center justify-center overflow-hidden\">\n            <Separator />\n            <span className=\"text-sm px-2\">OR</span>\n            <Separator />\n          </div>\n\n          <Form {...form}>\n            <form\n              className=\"w-full space-y-4\"\n              onSubmit={form.handleSubmit(onSubmit)}\n            >\n              <FormField\n                control={form.control}\n                name=\"email\"\n                render={({ field }) => (\n                  <FormItem>\n                    <FormLabel>Email</FormLabel>\n                    <FormControl>\n                      <Input\n                        type=\"email\"\n                        placeholder=\"Email\"\n                        className=\"w-full\"\n                        {...field}\n                      />\n                    </FormControl>\n                    <FormMessage />\n                  </FormItem>\n                )}\n              />\n              <FormField\n                control={form.control}\n                name=\"password\"\n                render={({ field }) => (\n                  <FormItem>\n                    <FormLabel>Password</FormLabel>\n                    <FormControl>\n                      <Input\n                        type=\"password\"\n                        placeholder=\"Password\"\n                        className=\"w-full\"\n                        {...field}\n                      />\n                    </FormControl>\n                    <FormMessage />\n                  </FormItem>\n                )}\n              />\n              <Button type=\"submit\" className=\"mt-4 w-full\">\n                Continue with Email\n              </Button>\n            </form>\n          </Form>\n\n          <div className=\"mt-5 space-y-5\">\n            <Link\n              href=\"#\"\n              className=\"text-sm block underline text-muted-foreground text-center\"\n            >\n              Forgot your password?\n            </Link>\n            <p className=\"text-sm text-center\">\n              Don&apos;t have an account?\n              <Link href=\"#\" className=\"ml-1 underline text-muted-foreground\">\n                Create account\n              </Link>\n            </p>\n          </div>\n        </div>\n        <div className=\"bg-muted hidden lg:block rounded-lg\" />\n      </div>\n    </div>\n  );\n};\n\nconst GoogleLogo = () => (\n  <svg\n    width=\"1.2em\"\n    height=\"1.2em\"\n    id=\"icon-google\"\n    viewBox=\"0 0 16 16\"\n    fill=\"none\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n    className=\"inline-block shrink-0 align-sub text-[inherit] size-lg\"\n  >\n    <g clipPath=\"url(#clip0)\">\n      <path\n        d=\"M15.6823 8.18368C15.6823 7.63986 15.6382 7.0931 15.5442 6.55811H7.99829V9.63876H12.3194C12.1401 10.6323 11.564 11.5113 10.7203 12.0698V14.0687H13.2983C14.8122 12.6753 15.6823 10.6176 15.6823 8.18368Z\"\n        fill=\"#4285F4\"\n      ></path>\n      <path\n        d=\"M7.99812 16C10.1558 16 11.9753 15.2915 13.3011 14.0687L10.7231 12.0698C10.0058 12.5578 9.07988 12.8341 8.00106 12.8341C5.91398 12.8341 4.14436 11.426 3.50942 9.53296H0.849121V11.5936C2.2072 14.295 4.97332 16 7.99812 16Z\"\n        fill=\"#34A853\"\n      ></path>\n      <path\n        d=\"M3.50665 9.53295C3.17154 8.53938 3.17154 7.4635 3.50665 6.46993V4.4093H0.849292C-0.285376 6.66982 -0.285376 9.33306 0.849292 11.5936L3.50665 9.53295Z\"\n        fill=\"#FBBC04\"\n      ></path>\n      <path\n        d=\"M7.99812 3.16589C9.13867 3.14825 10.241 3.57743 11.067 4.36523L13.3511 2.0812C11.9048 0.723121 9.98526 -0.0235266 7.99812 -1.02057e-05C4.97332 -1.02057e-05 2.2072 1.70493 0.849121 4.40932L3.50648 6.46995C4.13848 4.57394 5.91104 3.16589 7.99812 3.16589Z\"\n        fill=\"#EA4335\"\n      ></path>\n    </g>\n    <defs>\n      <clipPath id=\"clip0\">\n        <rect width=\"15.6825\" height=\"16\" fill=\"white\"></rect>\n      </clipPath>\n    </defs>\n  </svg>\n);\n\nexport default Login04Page;\n",
      "type": "registry:page",
      "target": "app/login/page.tsx"
    }
  ]
}