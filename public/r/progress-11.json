{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "progress-11",
  "type": "registry:component",
  "title": "Circular Progress with Custom Shape",
  "description": "A circular progress component with custom shape",
  "files": [
    {
      "path": "src/components/customized/progress/progress-11.tsx",
      "content": "\"use client\";\n\nimport * as React from \"react\";\n\nimport { Slider } from \"@/components/ui/slider\";\nimport { cn } from \"@/lib/utils\";\n\ninterface CircularProgressProps {\n  value: number;\n  renderLabel?: (progress: number) => number | string;\n  size?: number;\n  strokeWidth?: number;\n  circleStrokeWidth?: number;\n  progressStrokeWidth?: number;\n  shape?: \"square\" | \"round\";\n  className?: string;\n  progressClassName?: string;\n  labelClassName?: string;\n  showLabel?: boolean;\n}\n\nconst CircularProgress = ({\n  value,\n  renderLabel,\n  className,\n  progressClassName,\n  labelClassName,\n  showLabel,\n  shape = \"round\",\n  size = 100,\n  strokeWidth,\n  circleStrokeWidth = 10,\n  progressStrokeWidth = 10,\n}: CircularProgressProps) => {\n  const radius = size / 2 - 10;\n  const circumference = Math.ceil(3.14 * radius * 2);\n  const percentage = Math.ceil(circumference * ((100 - value) / 100));\n\n  const viewBox = `-${size * 0.125} -${size * 0.125} ${size * 1.25} ${\n    size * 1.25\n  }`;\n\n  return (\n    <div className=\"relative\">\n      <svg\n        width={size}\n        height={size}\n        viewBox={viewBox}\n        version=\"1.1\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        style={{ transform: \"rotate(-90deg)\" }}\n        className=\"relative\"\n      >\n        {/* Base Circle */}\n        <circle\n          r={radius}\n          cx={size / 2}\n          cy={size / 2}\n          fill=\"transparent\"\n          strokeWidth={strokeWidth ?? circleStrokeWidth}\n          strokeDasharray={circumference}\n          strokeDashoffset=\"0\"\n          className={cn(\"stroke-primary/25\", className)}\n        />\n\n        {/* Progress */}\n        <circle\n          r={radius}\n          cx={size / 2}\n          cy={size / 2}\n          strokeWidth={strokeWidth ?? progressStrokeWidth}\n          strokeLinecap={shape}\n          strokeDashoffset={percentage}\n          fill=\"transparent\"\n          strokeDasharray={circumference}\n          className={cn(\"stroke-primary\", progressClassName)}\n        />\n      </svg>\n      {showLabel && (\n        <div\n          className={cn(\n            \"absolute inset-0 flex items-center justify-center text-md\",\n            labelClassName\n          )}\n        >\n          {renderLabel ? renderLabel(value) : value}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default function CircularProgressShapeDemo() {\n  const [progress, setProgress] = React.useState([13]);\n\n  return (\n    <div className=\"max-w-xs mx-auto w-full flex flex-col items-center\">\n      <div className=\"flex items-center gap-1\">\n        <CircularProgress\n          value={progress[0]}\n          size={120}\n          strokeWidth={10}\n          showLabel\n          labelClassName=\"text-xl font-bold\"\n          renderLabel={(progress) => `${progress}%`}\n          shape=\"round\"\n        />\n        <CircularProgress\n          value={progress[0]}\n          size={120}\n          strokeWidth={10}\n          showLabel\n          labelClassName=\"text-xl font-bold\"\n          renderLabel={(progress) => `${progress}%`}\n          shape=\"square\"\n        />\n      </div>\n      <Slider\n        defaultValue={progress}\n        max={100}\n        step={1}\n        onValueChange={setProgress}\n        className=\"mt-6\"\n      />\n    </div>\n  );\n}\n",
      "type": "registry:component"
    }
  ]
}