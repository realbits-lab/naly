"use client";

import { useState } from "react";
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from "@/components/ui/card";
import { Button } from "@/components/ui/button";
import { Input } from "@/components/ui/input";
import { Badge } from "@/components/ui/badge";
import { PowerPointData } from "@/types/pptx";

interface JSONUploaderProps {
  onDataLoad: (data: PowerPointData) => void;
}

export default function JSONUploader({ onDataLoad }: JSONUploaderProps) {
  const [files, setFiles] = useState<{
    shapes?: File;
    layouts?: File;
    theme?: File;
    media?: File;
    properties?: File;
  }>({});
  const [loading, setLoading] = useState(false);
  const [error, setError] = useState<string | null>(null);

  const handleFileChange = (type: keyof typeof files, file: File | null) => {
    if (file) {
      setFiles(prev => ({ ...prev, [type]: file }));
      setError(null);
    }
  };

  const loadJSONFiles = async () => {
    if (!files.shapes || !files.layouts || !files.theme || !files.media || !files.properties) {
      setError("Please select all required JSON files");
      return;
    }

    setLoading(true);
    setError(null);

    try {
      const [shapesData, layoutsData, themeData, mediaData, propertiesData] = await Promise.all([
        files.shapes.text().then(text => JSON.parse(text)),
        files.layouts.text().then(text => JSON.parse(text)),
        files.theme.text().then(text => JSON.parse(text)),
        files.media.text().then(text => JSON.parse(text)),
        files.properties.text().then(text => JSON.parse(text)),
      ]);

      const powerPointData: PowerPointData = {
        shapes: shapesData,
        layouts: layoutsData,
        theme: themeData,
        media: mediaData,
        properties: propertiesData,
      };

      onDataLoad(powerPointData);
    } catch (err) {
      setError(`Error loading JSON files: ${err instanceof Error ? err.message : String(err)}`);
    } finally {
      setLoading(false);
    }
  };

  const fileTypes = [
    { key: 'shapes' as const, label: 'Shapes', description: 'Shape data from slides' },
    { key: 'layouts' as const, label: 'Layouts', description: 'Layout information' },
    { key: 'theme' as const, label: 'Theme', description: 'Theme colors and fonts' },
    { key: 'media' as const, label: 'Media', description: 'Images and media files' },
    { key: 'properties' as const, label: 'Properties', description: 'Document properties' },
  ];

  return (
    <Card className="w-full max-w-2xl mx-auto">
      <CardHeader>
        <CardTitle>Upload PowerPoint JSON Files</CardTitle>
        <CardDescription>
          Upload the JSON files generated by the PowerPoint extractor to view the presentation data
        </CardDescription>
      </CardHeader>
      <CardContent className="space-y-4">
        {fileTypes.map(({ key, label, description }) => (
          <div key={key} className="space-y-2">
            <div className="flex items-center justify-between">
              <div>
                <label className="text-sm font-medium">{label}</label>
                <p className="text-xs text-muted-foreground">{description}</p>
              </div>
              {files[key] && (
                <Badge variant="secondary" className="text-xs">
                  {files[key]!.name}
                </Badge>
              )}
            </div>
            <Input
              type="file"
              accept=".json"
              onChange={(e) => handleFileChange(key, e.target.files?.[0] || null)}
              className="file:mr-4 file:py-2 file:px-4 file:rounded-full file:border-0 file:text-sm file:font-semibold file:bg-primary file:text-primary-foreground hover:file:bg-primary/90"
            />
          </div>
        ))}

        {error && (
          <div className="p-3 bg-destructive/10 text-destructive rounded-md text-sm">
            {error}
          </div>
        )}

        <Button
          onClick={loadJSONFiles}
          disabled={loading || Object.keys(files).length < 5}
          className="w-full"
        >
          {loading ? "Loading..." : "Load PowerPoint Data"}
        </Button>
      </CardContent>
    </Card>
  );
}